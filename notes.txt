MultimodalCoTDataset Task Overview
============================

1. Seed Tasks (Original VisualSketchpad)
--------------------------------

IsoBench Tasks [Total: 1279]
- Math Parity (383)
- Math Convexity (255)
- Graph Maxflow (128)
- Graph Connectivity (128)
- Graph Isomorphism (128)
- Winner ID (257)

Vision Tasks [~800+]
- V*Bench (257)
- MMVP (300)
- BLINK Tasks (124-172 each)
  * Spatial Relations
  * Depth Perception
  * Jigsaw Puzzles

2. Extended Tasks
---------------

A. Programmatically Generated
-------------------------

physics/
✦ Content:
  - Mechanics problems
  - Force diagrams
  - Trajectories
  - Vector fields
✦ Implementation:
  - SymPy for symbolic computation
  - Matplotlib for diagrams
  - Physics solvers for validation

calculus/
✦ Content:
  - Derivatives & integrals
  - Tangent lines
  - Optimization plots
✦ Implementation:
  - Matplotlib + SymPy integration
  - Visual function analysis
  - Step-by-step solution plots

circuit_diagrams/
✦ Content:
  - Circuit analysis
  - Component relationships
  - Current/voltage problems
✦ Implementation:
  - Schemdraw for diagrams
  - Circuit simulation
  - Component calculations

maze/
✦ Content:
  - Path finding
  - Shortest routes
  - Algorithmic reasoning
✦ Implementation:
  - Grid maze generation
  - BFS/DFS visualization
  - Solution path tracing

tetris/
✦ Content:
  - Move prediction
  - Piece placement
  - Strategy planning
✦ Implementation:
  - State simulation
  - Move validation
  - Visual state tracking

turing/
✦ Content:
  - Finite automata diagrams
  - Turing machine tapes
  - State transitions
✦ Implementation:
  - FSM/graph libraries
  - Visual state machines
  - Execution traces

B. Scraped & LLM-Enhanced
----------------------

scientific_diagrams/
✦ Content:
  - arXiv figures
  - Wikipedia diagrams
  - Educational resources
✦ Process:
  - Web scraping
  - OCR processing
  - LLM-based reasoning

ocr_caption/
✦ Content:
  - Textbook figures
  - Research diagrams
  - Technical illustrations
✦ Process:
  - Caption extraction
  - Context analysis
  - Question generation

code_diagrams/
✦ Content:
  - Flowcharts
  - UML diagrams
  - System architectures
✦ Process:
  - Repository mining
  - Diagram parsing
  - Logic inference

chemistry/
✦ Content:
  - Reaction mechanisms
  - Molecular structures
  - Equation balancing
✦ Implementation:
  - PubChem integration
  - RDKit visualization
  - Reaction prediction
- Implementation: Use FSM or graph libraries
- Generate: Machine states, tapes, visual state transitions

B. Scraped and LLM-Enhanced Tasks
--------------------------------
scientific_diagrams/
- Content: Diagrams from arXiv, Wikipedia with LLM-generated CoT
- Source: Academic papers, educational resources
- Process: OCR + LLM for question/reasoning generation

ocr_caption/
- Content: Images with scientific figure captions
- Source: Textbook figures, slide decks
- Process: LLM generates reasoning questions from captions

code_diagrams/
- Content: Flowcharts, call graphs, UML diagrams
- Source: Codebases, technical blogs
- Process: Scrape diagrams + LLM generates reasoning queries

chemistry/
- Content: Reaction diagrams, molecular structures, equations
- Mixed Approach:
  * Programmatic: Generate balancing equations, simple reactions
  * Scraped: Complex molecules/reactions from PubChem, papers

When You Don't Need Vision Experts
1. Pure math tasks
2. Geometry from scratch
3. Physics diagrams
4. Function plots
5. Turing machines
6. Circuit diagrams
7. Maze generations

GPT-4 can generate code for the sketch, and you don't need vision tools.

When You Do Need Vision Experts
1. Reasoning about existing images
2. Modifying or segmenting figures (e.g., OCR-captioned scientific figures)
3. Analyzing diagrams with vague or noisy inputs