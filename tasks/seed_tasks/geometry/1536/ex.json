{
    "problem_text": "Find m \\angle C.",
    "choices": [
        "38",
        "66",
        "72",
        "128"
    ],
    "answer": "D",
    "detailed_solution": " ",
    "problem_type_graph": [
        "Other"
    ],
    "problem_type_goal": [
        "Angle"
    ],
    "source": "textbook1_chapter6.pdf page 9",
    "comment": "",
    "id": 1536,
    "annot_id": "Ran_2020-03-15_04_27_09",
    "is_standard": false,
    "compact_choices": [
        "38",
        "66",
        "72",
        "128"
    ],
    "precise_value": [
        38.0,
        66.0,
        72.0,
        128.0
    ],
    "rough_value": [
        38,
        66,
        72,
        128
    ],
    "compact_text": "Find m \\angle C.",
    "annotat_text": "Find $m\\angle C$",
    "unit": "",
    "img_width": 459,
    "img_height": 350,
    "data_type": "train",
    "date": "Fri Sep 18 22:23:14 2020",
    "system": "linux",
    "logic_form": {
        "text_logic_form": [
            "Find(MeasureOf(Angle(C)))"
        ],
        "dissolved_text_logic_form": [
            "Find(MeasureOf(Angle(C)))"
        ],
        "diagram_logic_form": [
            "Equals(MeasureOf(Angle(A, E, D)), 2x+10)",
            "Equals(MeasureOf(Angle(C, D, E)), x)",
            "Equals(MeasureOf(Angle(B, C, D)), 2x-20)",
            "PointLiesOnLine(F, Line(A, E))",
            "Perpendicular(Line(F, A), Line(A, B))",
            "Perpendicular(Line(A, B), Line(C, B))"
        ],
        "line_instances": [
            "AB",
            "AE",
            "CB",
            "DC",
            "ED",
            "FA",
            "FE"
        ],
        "point_positions": {
            "A": [
                1.0,
                1.0
            ],
            "B": [
                2.0,
                208.0
            ],
            "C": [
                210.0,
                206.0
            ],
            "D": [
                334.0,
                80.0
            ],
            "E": [
                211.0,
                2.0
            ],
            "F": [
                122.0,
                3.0
            ]
        },
        "circle_instances": [
            ""
        ]
    },
    "code": "import matplotlib.pyplot as plt\n\n# Define the coordinates\npoints = {\n    \"A\": [1.0, 1.0],\n    \"B\": [2.0, 208.0],\n    \"C\": [210.0, 206.0],\n    \"D\": [334.0, 80.0],\n    \"E\": [211.0, 2.0],\n    \"F\": [122.0, 3.0]\n}\n\n# Define the lines\nlines = {\n    \"AB\": (\"A\", \"B\"),\n    \"AE\": (\"A\", \"E\"),\n    \"CB\": (\"C\", \"B\"),\n    \"DC\": (\"D\", \"C\"),\n    \"ED\": (\"E\", \"D\"),\n    \"FA\": (\"F\", \"A\"),\n    \"FE\": (\"F\", \"E\")\n}\n\n# Create the plot\nfig, ax = plt.subplots()\nax.set_aspect('equal')\n\n# Hide the axes\nax.axis('off')\n\n# Set figure size\nfig.set_size_inches(10, 10)\n\n# Draw the lines\nfor line, (start, end) in lines.items():\n    x_values = [points[start][0], points[end][0]]\n    y_values = [points[start][1], points[end][1]]\n    ax.plot(x_values, y_values, marker='o', color='black')\n\n# Label the points\nfor point, coord in points.items():\n    ax.text(coord[0], coord[1], f' {point}', verticalalignment='center', fontsize=20, color='red')\n\nplt.show()\n",
    "image_path_code": "/fsx-onellm/swj0419/sketchpad/sketchpad/GPT4API/notebook_testing/796061a07c2a4253a92cfe3d7d0d082c.png"
}