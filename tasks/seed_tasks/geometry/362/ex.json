{
    "problem_text": "Find angle EIC. (Hint: Draw an auxiliary line).",
    "choices": [
        "105",
        "120",
        "125",
        "130"
    ],
    "answer": "D",
    "detailed_solution": " ",
    "problem_type_graph": [
        "Line"
    ],
    "problem_type_goal": [
        "Angle"
    ],
    "source": "textbook1_chapter_3.pdf",
    "comment": "",
    "id": 362,
    "annot_id": "pan_2020-03-15_01_36_20",
    "is_standard": false,
    "compact_choices": [
        "105",
        "120",
        "125",
        "130"
    ],
    "precise_value": [
        105.0,
        120.0,
        125.0,
        130.0
    ],
    "rough_value": [
        105,
        120,
        125,
        130
    ],
    "compact_text": "Find x. (Hint: Draw an auxiliary line).",
    "annotat_text": "Find $x$. (Hint: Draw an auxiliary line.)",
    "unit": "",
    "img_width": 518,
    "img_height": 306,
    "data_type": "train",
    "date": "Fri Sep 18 22:23:14 2020",
    "system": "linux",
    "logic_form": {
        "text_logic_form": [
            "Find(x)"
        ],
        "dissolved_text_logic_form": [
            "Find(x)"
        ],
        "diagram_logic_form": [
            "Equals(MeasureOf(Angle(B, C, J)), 105)",
            "Equals(MeasureOf(Angle(C, I, K)), x)",
            "Equals(MeasureOf(Angle(K, N, F)), 125)",
            "PointLiesOnLine(E, Line(F, H))",
            "PointLiesOnLine(C, Line(B, D))",
            "PointLiesOnLine(C, Line(I, J))",
            "PointLiesOnLine(E, Line(I, K))",
            "Parallel(Line(D, B), Line(F, H))"
        ],
        "line_instances": [
            "BC",
            "BD",
            "CD",
            "CI",
            "CJ",
            "EF",
            "EH",
            "EI",
            "EK",
            "FH",
            "IJ",
            "IK"
        ],
        "point_positions": {
            "B": [
                1.0,
                92.0
            ],
            "C": [
                226.0,
                91.0
            ],
            "D": [
                492.0,
                92.0
            ],
            "E": [
                242.0,
                197.0
            ],
            "F": [
                2.0,
                199.0
            ],
            "H": [
                492.0,
                199.0
            ],
            "I": [
                207.0,
                145.0
            ],
            "J": [
                245.0,
                1.0
            ],
            "K": [
                292.0,
                271.0
            ]
        },
        "circle_instances": [
            ""
        ]
    },
    "code": "import matplotlib.pyplot as plt\n\n# Define the coordinates\npoints = {\n    \"B\": [1.0, 92.0], \n    \"C\": [226.0, 91.0], \n    \"D\": [492.0, 92.0], \n    \"E\": [242.0, 197.0], \n    \"F\": [2.0, 199.0], \n    \"H\": [492.0, 199.0], \n    \"I\": [207.0, 145.0], \n    \"J\": [245.0, 1.0], \n    \"K\": [292.0, 271.0]\n}\n\n# Define the line instances between points\nlines = [\n    (\"B\", \"C\"),\n    (\"B\", \"D\"),\n    (\"C\", \"D\"),\n    (\"C\", \"I\"),\n    (\"C\", \"J\"),\n    (\"E\", \"F\"),\n    (\"E\", \"H\"),\n    (\"E\", \"I\"),\n    (\"E\", \"K\"),\n    (\"F\", \"H\"),\n    (\"I\", \"J\"),\n    (\"I\", \"K\")\n]\n\n# Create the plot\nfig, ax = plt.subplots()\nax.set_aspect('equal')\n\n# Plot each line\nfor line in lines:\n    x_values = [points[line[0]][0], points[line[1]][0]]\n    y_values = [points[line[0]][1], points[line[1]][1]]\n    ax.plot(x_values, y_values, 'k-')  # 'k-' denotes black color line\n\n# Annotate each point\nfor point, coord in points.items():\n    ax.text(coord[0], coord[1], f' {point}', fontsize=20, color='red', verticalalignment='bottom', horizontalalignment='right')\n\n# Set limits and hide axes\nax.set_xlim(0, 550)\nax.set_ylim(0, 300)\nax.axis('off')\n\nplt.show()\n",
    "image_path_code": "/fsx-onellm/swj0419/sketchpad/sketchpad/GPT4API/notebook_testing/07a6f7f4ae654798b1c85508b3143456.png"
}