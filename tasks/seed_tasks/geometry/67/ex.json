{
    "problem_text": "Find TQ.",
    "choices": [
        "2.7",
        "5.4",
        "6",
        "9"
    ],
    "answer": "B",
    "detailed_solution": " ",
    "problem_type_graph": [
        "Triangle"
    ],
    "problem_type_goal": [
        "Length"
    ],
    "source": "textbook1_chapter_7.pdf",
    "comment": "",
    "id": 67,
    "annot_id": "Shibiao_2020-03-22_12_20_32",
    "is_standard": false,
    "compact_choices": [
        "2.7",
        "5.4",
        "6",
        "9"
    ],
    "precise_value": [
        2.7,
        5.4,
        6.0,
        9.0
    ],
    "rough_value": [
        2.7,
        5.4,
        6,
        9
    ],
    "compact_text": "Find x.",
    "annotat_text": "Find $x$.",
    "unit": "",
    "img_width": 620,
    "img_height": 571,
    "data_type": "train",
    "date": "Fri Sep 18 22:23:14 2020",
    "system": "linux",
    "logic_form": {
        "text_logic_form": [
            "Find(x)"
        ],
        "dissolved_text_logic_form": [
            "Find(x)"
        ],
        "diagram_logic_form": [
            "Equals(LengthOf(Line(Q, T)), x)",
            "Equals(LengthOf(Line(R, Q)), 6)",
            "Equals(LengthOf(Line(S, Q)), 18)",
            "Equals(LengthOf(Line(S, R)), 14)",
            "PointLiesOnLine(T, Line(S, Q))",
            "Equals(MeasureOf(Angle(Q, R, T)), MeasureOf(Angle(T, R, S)))"
        ],
        "line_instances": [
            "QT",
            "RQ",
            "RT",
            "SQ",
            "SR",
            "ST"
        ],
        "point_positions": {
            "Q": [
                377.0,
                63.0
            ],
            "R": [
                438.0,
                272.0
            ],
            "S": [
                87.0,
                449.0
            ],
            "T": [
                269.0,
                205.0
            ]
        },
        "circle_instances": [
            ""
        ]
    },
    "code": "import matplotlib.pyplot as plt\n\n# Define the coordinates\npoints = {\"Q\": [377.0, 63.0], \"R\": [438.0, 272.0], \"S\": [87.0, 449.0], \"T\": [269.0, 205.0]}\n\n# Create the plot\nfig, ax = plt.subplots()\n\n# Draw lines based on line instances\nlines = [(\"Q\", \"T\"), (\"R\", \"Q\"), (\"R\", \"T\"), (\"S\", \"Q\"), (\"S\", \"R\"), (\"S\", \"T\")]\nfor line in lines:\n    x_values = [points[line[0]][0], points[line[1]][0]]\n    y_values = [points[line[0]][1], points[line[1]][1]]\n    ax.plot(x_values, y_values, 'k-')  # 'k-' for black line\n\n# Plot points and labels\nfor point, coord in points.items():\n    ax.plot(coord[0], coord[1], 'ko')  # 'ko' for black dot\n    ax.text(coord[0] + 10, coord[1] + 10, point, fontsize=20, color='red')\n\n# Set the aspect of the plot to be equal\nax.set_aspect('equal')\n\n# Remove axes\nax.axis('off')\n\n# Set limits\nax.set_xlim(50, 500)\nax.set_ylim(0, 500)\n\n# Show the plot\nplt.show()\n",
    "image_path_code": "/fsx-onellm/swj0419/sketchpad/sketchpad/GPT4API/notebook_testing/620802ef98824a4fa2f7362daf9d1c59.png"
}