{
    "problem_text": "Find the area of the regular polygon. Round to the nearest tenth.",
    "choices": [
        "15.6",
        "18.0",
        "31.2",
        "36.0"
    ],
    "answer": "A",
    "detailed_solution": " ",
    "problem_type_graph": [
        "Triangle"
    ],
    "problem_type_goal": [
        "Area"
    ],
    "source": "textbook1_chapter_11.pdf",
    "comment": "",
    "id": 1540,
    "annot_id": "pan_2020-03-23_04_46_51",
    "is_standard": false,
    "unit": "m^2",
    "compact_choices": [
        "15.6",
        "18.0",
        "31.2",
        "36.0"
    ],
    "precise_value": [
        15.6,
        18.0,
        31.2,
        36.0
    ],
    "rough_value": [
        15.6,
        18,
        31.2,
        36
    ],
    "compact_text": "Find the area of the regular polygon. Round to the nearest tenth.",
    "annotat_text": "Find the area of the regular polygon. Round to the nearest tenth.",
    "img_width": 231,
    "img_height": 222,
    "data_type": "train",
    "date": "Fri Sep 18 22:23:14 2020",
    "system": "linux",
    "logic_form": {
        "text_logic_form": [
            "Find(AreaOf(Regular(Polygon($))))"
        ],
        "dissolved_text_logic_form": [
            "Find(AreaOf(Regular(Triangle(A,B,C))))"
        ],
        "diagram_logic_form": [
            "Equals(LengthOf(Line(A, B)), 6)"
        ],
        "line_instances": [
            "AB",
            "AC",
            "BC"
        ],
        "point_positions": {
            "A": [
                2.0,
                181.0
            ],
            "B": [
                180.0,
                92.0
            ],
            "C": [
                0.0,
                1.0
            ]
        },
        "circle_instances": [
            ""
        ]
    },
    "code": "import matplotlib.pyplot as plt\n\n# Define the coordinates\npoints = {\"A\": [2.0, 181.0], \"B\": [180.0, 92.0], \"C\": [0.0, 1.0]}\n\n# Create the figure and axis\nfig, ax = plt.subplots()\nfig.set_size_inches(12, 12)\n\n# Plotting the lines\nax.plot([points[\"A\"][0], points[\"B\"][0]], [points[\"A\"][1], points[\"B\"][1]], 'k-')  # Line AB\nax.plot([points[\"A\"][0], points[\"C\"][0]], [points[\"A\"][1], points[\"C\"][1]], 'k-')  # Line AC\nax.plot([points[\"B\"][0], points[\"C\"][0]], [points[\"B\"][1], points[\"C\"][1]], 'k-')  # Line BC\n\n# Plotting the points\nfor point, coord in points.items():\n    ax.plot(coord[0], coord[1], 'ko')  # 'ko' for black circles\n    ax.text(coord[0] + 5, coord[1] + 5, point, fontsize=20, color='red')\n\n# Set aspect of the plot to be equal\nax.set_aspect('equal')\n\n# Hide axes\nax.axis('off')\n\n# Show the plot\nplt.show()\n",
    "image_path_code": "/fsx-onellm/swj0419/sketchpad/sketchpad/GPT4API/notebook_testing/f3d9fad12fed42608c77295a0da4712f.png"
}