{
    "problem_text": "Find m \\widehat A C.",
    "choices": [
        "12",
        "24",
        "48",
        "96"
    ],
    "answer": "C",
    "detailed_solution": " ",
    "problem_type_graph": [
        "Circle"
    ],
    "problem_type_goal": [
        "Angle"
    ],
    "source": "textbook1_chapter_10.pdf",
    "comment": "",
    "id": 1977,
    "annot_id": "Shibiao_2020-03-28_09_29_04",
    "is_standard": false,
    "compact_choices": [
        "12",
        "24",
        "48",
        "96"
    ],
    "precise_value": [
        12.0,
        24.0,
        48.0,
        96.0
    ],
    "rough_value": [
        12,
        24,
        48,
        96
    ],
    "compact_text": "Find m \\widehat AC.",
    "annotat_text": "Find $m \\widehat {AC}$.",
    "unit": "",
    "img_width": 480,
    "img_height": 446,
    "data_type": "train",
    "date": "Fri Sep 18 22:23:14 2020",
    "system": "linux",
    "logic_form": {
        "text_logic_form": [
            "Find(MeasureOf(Arc(A,C)))"
        ],
        "dissolved_text_logic_form": [
            "Find(MeasureOf(Arc(A,C)))"
        ],
        "diagram_logic_form": [
            "Equals(MeasureOf(Angle(A, D, C)), 24)",
            "PointLiesOnCircle(B, Circle(D, radius_3_0))",
            "PointLiesOnCircle(A, Circle(D, radius_3_0))",
            "PointLiesOnCircle(C, Circle(D, radius_3_0))"
        ],
        "line_instances": [
            "BA",
            "BC"
        ],
        "point_positions": {
            "A": [
                14.0,
                93.0
            ],
            "B": [
                262.0,
                276.0
            ],
            "C": [
                111.0,
                7.0
            ],
            "D": [
                157.0,
                159.0
            ]
        },
        "circle_instances": [
            "D"
        ]
    },
    "code": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the coordinates\npoints = {\"A\": [14.0, 93.0], \"B\": [262.0, 276.0], \"C\": [111.0, 7.0], \"D\": [157.0, 159.0]}\n\n# Create the plot\nfig, ax = plt.subplots()\n\n# Draw lines according to the line instances\nfor line in [\"BA\", \"BC\"]:\n    x_values = [points[line[0]][0], points[line[1]][0]]\n    y_values = [points[line[0]][1], points[line[1]][1]]\n    ax.plot(x_values, y_values, color='black')\n\n# Draw the circle at point D with radius calculated by the distance to point A\nradius = np.sqrt((points[\"D\"][0] - points[\"A\"][0])**2 + (points[\"D\"][1] - points[\"A\"][1])**2)\ncircle = plt.Circle((points[\"D\"][0], points[\"D\"][1]), radius, color='black', fill=False)\nax.add_artist(circle)\n\n# Set the aspect of the plot to be equal\nax.set_aspect('equal')\n\n# Increase the plot limits around the circle\nax.set_xlim(points[\"D\"][0] - radius - 10, points[\"D\"][0] + radius + 10)\nax.set_ylim(points[\"D\"][1] - radius - 10, points[\"D\"][1] + radius + 10)\n\n# Hide the axes\nax.axis('off')\n\n# Add labels to the points\nfor point, coord in points.items():\n    ax.text(coord[0], coord[1], f' {point}', fontsize=20, color='red', verticalalignment='bottom')\n\n# Show the plot\nplt.show()\n",
    "image_path_code": "/fsx-onellm/swj0419/sketchpad/sketchpad/GPT4API/notebook_testing/49873d46aa0145e9949d28796444fbfd.png"
}