{
    "problem_text": "Find the area of the shaded region formed by the circle and regular polygon. Round to the nearest tenth.",
    "choices": [
        "0.6",
        "1.3",
        "1.9",
        "3.9"
    ],
    "answer": "C",
    "detailed_solution": " ",
    "problem_type_graph": [
        "Circle",
        "Triangle"
    ],
    "problem_type_goal": [
        "Area"
    ],
    "source": "textbook1_chapter_11.pdf",
    "comment": "",
    "id": 1841,
    "annot_id": "pan_2020-03-23_06_51_24",
    "is_standard": false,
    "unit": "in^2",
    "compact_choices": [
        "0.6",
        "1.3",
        "1.9",
        "3.9"
    ],
    "precise_value": [
        0.6,
        1.3,
        1.9,
        3.9
    ],
    "rough_value": [
        0.6,
        1.3,
        1.9,
        3.9
    ],
    "compact_text": "Find the area of the shaded region formed by the circle and regular polygon. Round to the nearest tenth.",
    "annotat_text": "Find the area of the shaded region formed by the circle and regular polygon. Round to the nearest tenth.",
    "img_width": 268,
    "img_height": 249,
    "data_type": "train",
    "date": "Fri Sep 18 22:23:14 2020",
    "system": "linux",
    "logic_form": {
        "text_logic_form": [
            "Circle($)",
            "Regular(Polygon($))",
            "Find(AreaOf(Shaded(Shape($))))"
        ],
        "dissolved_text_logic_form": [
            "Circle(E)",
            "Regular(Hexagon(I,H,A,L,C,G))",
            "Find(AreaOf(Shaded(Shape($))))"
        ],
        "diagram_logic_form": [
            "Equals(LengthOf(Line(E, N)), 4)",
            "PointLiesOnLine(N, Line(A, E))",
            "PointLiesOnLine(E, Line(A, G))",
            "PointLiesOnLine(N, Line(A, G))",
            "PointLiesOnLine(J, Line(A, H))",
            "PointLiesOnLine(K, Line(G, C))",
            "PointLiesOnLine(B, Line(G, I))",
            "PointLiesOnLine(E, Line(G, N))",
            "PointLiesOnLine(D, Line(H, I))",
            "PointLiesOnLine(F, Line(L, C))",
            "PointLiesOnCircle(B, Circle(E, radius_4_0))",
            "PointLiesOnCircle(D, Circle(E, radius_4_0))",
            "PointLiesOnCircle(F, Circle(E, radius_4_0))",
            "PointLiesOnCircle(J, Circle(E, radius_4_0))",
            "PointLiesOnCircle(K, Circle(E, radius_4_0))",
            "PointLiesOnCircle(N, Circle(E, radius_4_0))"
        ],
        "line_instances": [
            "AE",
            "AH",
            "AJ",
            "AL",
            "AN",
            "BI",
            "CF",
            "CK",
            "EN",
            "GB",
            "GC",
            "GI",
            "GK",
            "GN",
            "HD",
            "HI",
            "HJ",
            "HN",
            "ID",
            "JN",
            "LC",
            "LF"
        ],
        "point_positions": {
            "A": [
                169.0,
                195.0
            ],
            "B": [
                28.0,
                51.0
            ],
            "C": [
                170.0,
                1.0
            ],
            "D": [
                32.0,
                150.0
            ],
            "E": [
                112.0,
                96.0
            ],
            "F": [
                198.0,
                53.0
            ],
            "G": [
                57.0,
                0.0
            ],
            "H": [
                57.0,
                194.0
            ],
            "I": [
                1.0,
                100.0
            ],
            "J": [
                113.0,
                194.0
            ],
            "K": [
                116.0,
                1.0
            ],
            "L": [
                224.0,
                100.0
            ],
            "N": [
                164.0,
                185.0
            ]
        },
        "circle_instances": [
            "E"
        ]
    },
    "code": "import matplotlib.pyplot as plt\n\n# Define coordinates\npoints = {\n    \"A\": [169.0, 195.0], \"B\": [28.0, 51.0], \"C\": [170.0, 1.0], \"D\": [32.0, 150.0], \"E\": [112.0, 96.0],\n    \"F\": [198.0, 53.0], \"G\": [57.0, 0.0], \"H\": [57.0, 194.0], \"I\": [1.0, 100.0], \"J\": [113.0, 194.0],\n    \"K\": [116.0, 1.0], \"L\": [224.0, 100.0], \"N\": [164.0, 185.0]\n}\nlines = [\n    (\"A\", \"E\"), (\"A\", \"H\"), (\"A\", \"J\"), (\"A\", \"L\"), (\"A\", \"N\"), (\"B\", \"I\"), (\"C\", \"F\"), (\"C\", \"K\"),\n    (\"E\", \"N\"), (\"G\", \"B\"), (\"G\", \"C\"), (\"G\", \"I\"), (\"G\", \"K\"), (\"G\", \"N\"), (\"H\", \"D\"), (\"H\", \"I\"),\n    (\"H\", \"J\"), (\"H\", \"N\"), (\"I\", \"D\"), (\"J\", \"N\"), (\"L\", \"C\"), (\"L\", \"F\")\n]\ncircle_center = \"E\"\ncircle_radius = 4.0  # From the logical description and diagram rules\n\n# Create figure and axis\nfig, ax = plt.subplots()\nax.set_aspect('equal')\n\n# Draw lines\nfor line in lines:\n    p1, p2 = line\n    ax.plot([points[p1][0], points[p2][0]], [points[p1][1], points[p2][1]], 'k-')  # black line\n\n# Draw circle\ncircle = plt.Circle((points[circle_center][0], points[circle_center][1]), circle_radius, color='k', fill=False)\nax.add_artist(circle)\n\n# Plot points and labels\nfor point, coord in points.items():\n    ax.plot(coord[0], coord[1], 'ko')  # black point\n    ax.text(coord[0], coord[1], f' {point}', fontsize=20, color='red', verticalalignment='bottom', horizontalalignment='right')\n\n# Set limits\nmax_coordinate = max(max(x) for x in points.values()) + circle_radius\nax.set_xlim(-max_coordinate, max_coordinate)\nax.set_ylim(-max_coordinate, max_coordinate)\n\n# Hide background\nax.axis('off')\n\nplt.show()\n",
    "image_path_code": "/fsx-onellm/swj0419/sketchpad/sketchpad/GPT4API/notebook_testing/90a0b1ea08144ec88faca83d47603597.png"
}