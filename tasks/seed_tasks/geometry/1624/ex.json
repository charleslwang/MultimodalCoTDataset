{
    "problem_text": "Find the area of the figure (Shape ADBCN). Round to the nearest tenth if necessary.",
    "choices": [
        "24.5",
        "49",
        "155.5",
        "180"
    ],
    "answer": "C",
    "detailed_solution": " ",
    "problem_type_graph": [
        "Rectangle",
        "Triangle"
    ],
    "problem_type_goal": [
        "Area"
    ],
    "source": "textbook1_chapter_11.pdf",
    "comment": "",
    "id": 1624,
    "annot_id": "pan_2020-03-23_04_42_03",
    "is_standard": false,
    "unit": "in^2",
    "compact_choices": [
        "24.5",
        "49",
        "155.5",
        "180"
    ],
    "precise_value": [
        24.5,
        49.0,
        155.5,
        180.0
    ],
    "rough_value": [
        24.5,
        49,
        155.5,
        180
    ],
    "compact_text": "Find the area of the figure. Round to the nearest tenth if necessary.",
    "annotat_text": "Find the area of the figure. Round to the nearest tenth if necessary.",
    "img_width": 363,
    "img_height": 252,
    "data_type": "train",
    "date": "Fri Sep 18 22:23:14 2020",
    "system": "linux",
    "logic_form": {
        "text_logic_form": [
            "Find(AreaOf(Shape($)))"
        ],
        "dissolved_text_logic_form": [
            "Find(AreaOf(Pentagon(A,N,C,B,D)))"
        ],
        "diagram_logic_form": [
            "Equals(LengthOf(Line(A, N)), 5)",
            "Equals(LengthOf(Line(B, D)), 8)",
            "Equals(LengthOf(Line(B, C)), 12)",
            "Equals(LengthOf(Line(C, N)), 15)",
            "Perpendicular(Line(D, B), Line(B, C))",
            "Perpendicular(Line(B, C), Line(N, C))",
            "Perpendicular(Line(A, N), Line(N, C))"
        ],
        "line_instances": [
            "AD",
            "AN",
            "BC",
            "DB",
            "NC"
        ],
        "point_positions": {
            "A": [
                197.0,
                93.0
            ],
            "B": [
                3.0,
                0.0
            ],
            "C": [
                -0.0,
                157.0
            ],
            "D": [
                105.0,
                2.0
            ],
            "N": [
                197.0,
                152.0
            ]
        },
        "circle_instances": [
            ""
        ]
    },
    "code": "import matplotlib.pyplot as plt\n\n# Coordinates of points\ncoordinates = {\n    \"A\": [197.0, 93.0],\n    \"B\": [3.0, 0.0],\n    \"C\": [-0.0, 157.0],\n    \"D\": [105.0, 2.0],\n    \"N\": [197.0, 152.0]\n}\n\n# Line instances\nlines = [\n    (\"A\", \"D\"),\n    (\"A\", \"N\"),\n    (\"B\", \"C\"),\n    (\"D\", \"B\"),\n    (\"N\", \"C\")\n]\n\n# Setup the plot\nfig, ax = plt.subplots()\nax.set_aspect('equal')\nax.axis('off')\n\n# Draw lines\nfor line in lines:\n    point1, point2 = line\n    x_values = [coordinates[point1][0], coordinates[point2][0]]\n    y_values = [coordinates[point1][1], coordinates[point2][1]]\n    ax.plot(x_values, y_values, 'k')  # 'k' for black line\n\n# Label points\nfor point, coord in coordinates.items():\n    ax.text(coord[0] + 2, coord[1] + 2, point, fontsize=20, color='red', va='center', ha='center')\n\n# Set limits\nax.set_xlim(min(coord[0] for coord in coordinates.values()) - 10, max(coord[0] for coord in coordinates.values()) + 10)\nax.set_ylim(min(coord[1] for coord in coordinates.values()) - 10, max(coord[1] for coord in coordinates.values()) + 10)\n\n# Show the plot\nplt.show()\n",
    "image_path_code": "/fsx-onellm/swj0419/sketchpad/sketchpad/GPT4API/notebook_testing/3c205b4b7308423a9efe570732806757.png"
}