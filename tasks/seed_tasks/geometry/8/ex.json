{
    "problem_text": "In \\odot K, M N = 16 and m \\widehat M N = 98. Find the measure of L N. Round to the nearest hundredth.",
    "choices": [
        "6.93",
        "7.50",
        "8.94",
        "10.00"
    ],
    "answer": "C",
    "detailed_solution": " ",
    "problem_type_graph": [
        "Circle"
    ],
    "problem_type_goal": [
        "Length"
    ],
    "source": "textbook1_chapter_10.pdf",
    "comment": "",
    "id": 8,
    "annot_id": "pan_2020-03-27_22_09_03",
    "is_standard": false,
    "compact_choices": [
        "6.93",
        "7.50",
        "8.94",
        "10.00"
    ],
    "precise_value": [
        6.93,
        7.5,
        8.94,
        10.0
    ],
    "rough_value": [
        6.93,
        7.5,
        8.94,
        10
    ],
    "compact_text": "In \\odot K, MN = 16 and m \\widehat MN = 98. Find the measure of LN. Round to the nearest hundredth.",
    "annotat_text": "$\\ln \\odot K$, $ M N=16$ and $m \\widehat{M N}=98$. Find the measure of $LN$. Round to the nearest hundredth.",
    "unit": "",
    "img_width": 264,
    "img_height": 255,
    "data_type": "train",
    "date": "Fri Sep 18 22:23:14 2020",
    "system": "linux",
    "logic_form": {
        "text_logic_form": [
            "Circle(K)",
            "Equals(LengthOf(Line(M,N)),16)",
            "Equals(MeasureOf(Arc(M,N)),98)",
            "Find(LengthOf(Line(L,N)))"
        ],
        "dissolved_text_logic_form": [
            "Circle(K)",
            "Equals(LengthOf(Line(M,N)),16)",
            "Equals(MeasureOf(Arc(M,N)),98)",
            "Find(LengthOf(Line(L,N)))"
        ],
        "diagram_logic_form": [
            "Equals(LengthOf(Line(J, K)), 10)",
            "PointLiesOnLine(P, Line(M, N))",
            "PointLiesOnLine(K, Line(P, J))",
            "PointLiesOnLine(P, Line(L, J))",
            "PointLiesOnLine(K, Line(L, J))",
            "PointLiesOnLine(P, Line(L, K))",
            "PointLiesOnCircle(M, Circle(K, radius_7_0))",
            "PointLiesOnCircle(J, Circle(K, radius_7_0))",
            "PointLiesOnCircle(N, Circle(K, radius_7_0))",
            "PointLiesOnCircle(L, Circle(K, radius_7_0))",
            "Perpendicular(Line(P, K), Line(M, P))"
        ],
        "line_instances": [
            "JK",
            "LJ",
            "LK",
            "ML",
            "MN",
            "MP",
            "NL",
            "PJ",
            "PK",
            "PL",
            "PN"
        ],
        "point_positions": {
            "J": [
                160.0,
                24.0
            ],
            "K": [
                93.0,
                97.0
            ],
            "L": [
                33.0,
                166.0
            ],
            "M": [
                1.0,
                96.0
            ],
            "N": [
                98.0,
                186.0
            ],
            "P": [
                52.0,
                144.0
            ]
        },
        "circle_instances": [
            "K"
        ]
    },
    "code": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Define points\npoints = {\"J\": [160.0, 24.0], \"K\": [93.0, 97.0], \"L\": [33.0, 166.0], \"M\": [1.0, 96.0], \"N\": [98.0, 186.0], \"P\": [52.0, 144.0]}\n\n# Define lines\nlines = [(\"J\", \"K\"), (\"L\", \"J\"), (\"L\", \"K\"), (\"M\", \"L\"), (\"M\", \"N\"), (\"M\", \"P\"), (\"N\", \"L\"), (\"P\", \"J\"), (\"P\", \"K\"), (\"P\", \"L\"), (\"P\", \"N\")]\n\n# Setup plot\nfig, ax = plt.subplots()\nax.set_aspect('equal')\nax.axis('off')\n\n# Draw lines\nfor line in lines:\n    x_values = [points[line[0]][0], points[line[1]][0]]\n    y_values = [points[line[0]][1], points[line[1]][1]]\n    ax.plot(x_values, y_values, 'k-')  # 'k-' for black line\n\n# Draw circle with center at K and radius calculated from K to J\ncenter = np.array(points[\"K\"])\nradius = np.linalg.norm(np.array(points[\"J\"]) - center)\ncircle = plt.Circle(center, radius, color='k', fill=False)\nax.add_artist(circle)\n\n# Define plot limits\nlimit = 2 * radius\nax.set_xlim(center[0] - limit, center[0] + limit)\nax.set_ylim(center[1] - limit, center[1] + limit)\n\n# Draw points and labels\nfor label, coord in points.items():\n    ax.plot(coord[0], coord[1], 'ko')  # 'ko' for black dot\n    ax.text(coord[0], coord[1], f' {label}', fontsize=20, color='red', verticalalignment='bottom', horizontalalignment='right')\n\nplt.show()\n",
    "image_path_code": "/fsx-onellm/swj0419/sketchpad/sketchpad/GPT4API/notebook_testing/cb0da54dd930453c9cd6d368c2ec5b86.png"
}