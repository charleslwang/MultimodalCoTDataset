{
    "problem_text": "Find x. Assume that segments that appear to be tangent are tangent.",
    "choices": [
        "6",
        "8",
        "9.6",
        "14.6"
    ],
    "answer": "C",
    "detailed_solution": " ",
    "problem_type_graph": [
        "Circle"
    ],
    "problem_type_goal": [
        "Length"
    ],
    "source": "textbook2_chapter10.pdf page 68",
    "comment": "",
    "id": 597,
    "annot_id": "Ran_2020-03-29_06_10_17",
    "is_standard": false,
    "compact_choices": [
        "6",
        "8",
        "9.6",
        "14.6"
    ],
    "precise_value": [
        6.0,
        8.0,
        9.6,
        14.6
    ],
    "rough_value": [
        6,
        8,
        9.6,
        14.6
    ],
    "compact_text": "Find x. Assume that segments that appear to be tangent are tangent.",
    "annotat_text": "Find x. Assume that segments that appear to be tangent are tangent.",
    "unit": "",
    "img_width": 161,
    "img_height": 142,
    "data_type": "train",
    "date": "Fri Sep 18 22:23:14 2020",
    "system": "linux",
    "logic_form": {
        "text_logic_form": [
            "Tangent(Line($),Circle($))",
            "Find(x)"
        ],
        "dissolved_text_logic_form": [
            "Find(x)"
        ],
        "diagram_logic_form": [
            "Equals(LengthOf(Line(D, E)), 5)",
            "Equals(LengthOf(Line(A, D)), 8)",
            "Equals(LengthOf(Line(D, F)), 6)",
            "PointLiesOnLine(D, Line(A, F))",
            "PointLiesOnLine(D, Line(B, E))",
            "PointLiesOnCircle(A, Circle(C, radius_5_0))",
            "PointLiesOnCircle(B, Circle(C, radius_5_0))",
            "PointLiesOnCircle(E, Circle(C, radius_5_0))",
            "PointLiesOnCircle(F, Circle(C, radius_5_0))"
        ],
        "line_instances": [
            "AD",
            "AF",
            "BC",
            "BE",
            "DB",
            "DE",
            "DF"
        ],
        "point_positions": {
            "A": [
                123.0,
                48.0
            ],
            "B": [
                38.0,
                119.0
            ],
            "C": [
                65.0,
                64.0
            ],
            "D": [
                56.0,
                43.0
            ],
            "E": [
                66.0,
                1.0
            ],
            "F": [
                12.0,
                40.0
            ]
        },
        "circle_instances": [
            "C"
        ]
    },
    "code": "import matplotlib.pyplot as plt\n\n# Coordinates of points\ncoordinates = {\n    \"A\": [123.0, 48.0], \n    \"B\": [38.0, 119.0], \n    \"C\": [65.0, 64.0], \n    \"D\": [56.0, 43.0], \n    \"E\": [66.0, 1.0], \n    \"F\": [12.0, 40.0]\n}\n\n# Define lines between points\nlines = [\n    (\"A\", \"D\"), \n    (\"A\", \"F\"), \n    (\"B\", \"C\"), \n    (\"B\", \"E\"), \n    (\"D\", \"B\"), \n    (\"D\", \"E\"), \n    (\"D\", \"F\")\n]\n\n# Set up the plot\nfig, ax = plt.subplots()\nax.set_aspect('equal')\n\n# Draw lines\nfor line in lines:\n    x_values = [coordinates[line[0]][0], coordinates[line[1]][0]]\n    y_values = [coordinates[line[0]][1], coordinates[line[1]][1]]\n    ax.plot(x_values, y_values, 'k-')  # black line\n\n# Draw the circle with radius 5 centered at C\ncircle = plt.Circle((coordinates[\"C\"][0], coordinates[\"C\"][1]), 5, color='b', fill=False)\nax.add_artist(circle)\n\n# Label points\nfor label, coord in coordinates.items():\n    ax.text(coord[0], coord[1] + 5, label, color='red', fontsize=20, ha='center')\n\n# Calculate limits\nx_coords = [coord[0] for coord in coordinates.values()]\ny_coords = [coord[1] for coord in coordinates.values()]\nmax_radius = 5  # since the circle has radius 5 and is the largest feature\nlimit = max(max(x_coords) + max_radius, max(y_coords) + max_radius, 2 * max_radius)\nax.set_xlim(min(x_coords) - max_radius, limit)\nax.set_ylim(min(y_coords) - max_radius, limit)\n\n# Hide axes\nax.axis('off')\n\nplt.show()\n",
    "image_path_code": "/fsx-onellm/swj0419/sketchpad/sketchpad/GPT4API/notebook_testing/9afe0c9f09db43a2a72f32e37f2e7131.png"
}